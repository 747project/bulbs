  

create_indexed_vertex: |
  import groovy.json.JsonSlurper
  def slurper = new JsonSlurper()
  keys = slurper.parseText($keys)  
  data = slurper.parseText($data)
  g.setMaxBufferSize(0)
  g.startTransaction()
  Vertex vertex = g.addVertex(data)
  index = g.getIndex('$index_name',Vertex)
  for ( String key in keys ) {
    value = data[key]
    index.put(key,value,vertex)
  }
  g.stopTransaction(TransactionalGraph.Conclusion.SUCCESS)
  return vertex

# if the index keys change, rebuild the index
update_indexed_vertex: |
  import groovy.json.JsonSlurper
  def slurper = new JsonSlurper()
  keys = slurper.parseText($keys)  
  data = slurper.parseText($data)
  index = g.getIndex('$index_name',Vertex)
  Vertex vertex = g.v($_id)
  g.setMaxBufferSize(0)
  g.startTransaction()
  for ( String key in vertex.getPropertyKeys() ) {
    index.remove(vertex,key,vertex.getProperty(key))
  }
  elements = [vertex]
  ElementHelper.removeProperties(elements)
  ElementHelper.setProperties(vertex,data)
  for (entry in data.entrySet()) {
    if (entry.value == null) continue;
    if (keys == null || keys.contains(entry.key)
      index.put(key,value,vertex)
  }
  g.stopTransaction(TransactionalGraph.Conclusion.SUCCESS)
  return vertex
  

create_indexed_edge: |
  g.setMaxBufferSize(0)
  g.startTransaction()
  Edge edge = g.addEdge($data)
  index = g.getIndex('$index_name',Edge)
  index.put($index_data,edge)
  g.stopTransaction(TransactionalGraph.Conclusion.SUCCESS)
  return edge


#
# Extra Stuff
#

add_unique_vertex: |
  vertex = g.addUniqueVertex(g,null,index,unique_key,value)




rebuild_vertex_index: |
  index = g.getIndex('$index_name',Vertex)
  AutomaticIndexHelper.reIndexElements(g, index, g.getVertices())

rebuild_edge_index: |
  index = g.getIndex('$index_name',Edge)
  AutomaticIndexHelper.reIndexElements(g, index, g.getEdges())

#
# Automatic Indices 
#

create_automatic_vertex_index: |
  import groovy.json.JsonSlurper
  def slurper = new JsonSlurper()
  keys = $keys
  if (keys != null) 
    keys = slurper.parseText(keys)  
  public abstract class $element_class implements Vertex {}  
  index = g.createAutomaticIndex('$index_name',${element_class}.class,keys)   
  

create_automatic_indexed_vertex: |
  import groovy.json.JsonSlurper
  def slurper = new JsonSlurper()
  data = slurper.parseText('$data')
  elementIndex = g.idx('$index_name')
  verticesIndex = g.idx('vertices')
  //g.setMaxBufferSize(0)
  //g.startTransaction()
  vertex = g.addVertex(data)
  AutomaticIndexHelper.addElement(elementIndex,vertex)
  AutomaticIndexHelper.addElement(verticesIndex,vertex)
  //g.stopTransaction(TransactionalGraph.Conclusion.SUCCESS)
  return vertex

